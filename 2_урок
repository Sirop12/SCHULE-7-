

---

## План урока в Python

### Урок 2: Списки, циклы `for`, функции

#### Введение в списки:
Объясните, что такое список в Python:
- **Список** — это структура данных, которая позволяет хранить несколько значений в одной переменной.

**Пример из жизни:**
"Представьте, что у вас есть список покупок в магазине: хлеб, молоко, яйца. Каждый элемент в этом списке — это товар, который нужно купить."

```python
# Пример списка покупок
shopping_list = ['bread', 'milk', 'eggs']
print(shopping_list)  # Выводим список: ['bread', 'milk', 'eggs']
```

#### Операции со списками:
- **Добавление элемента:** `.append()`
- **Удаление элемента:** `.remove()`
- **Доступ к элементам списка по индексу:** `shopping_list[0]` (первый элемент)

```python
# Добавляем элемент в список покупок
shopping_list.append('cheese')  # Метод append добавляет 'cheese' в конец списка
print(shopping_list)  # Вывод: ['bread', 'milk', 'eggs', 'cheese']

# Удаляем элемент из списка покупок
shopping_list.remove('milk')  # Метод remove удаляет 'milk' из списка
print(shopping_list)  # Вывод: ['bread', 'eggs', 'cheese']

# Получаем элемент по индексу
first_item = shopping_list[0]  # Индекс 0 указывает на первый элемент списка
print(first_item)  # Вывод: 'bread'
```

#### Цикл `for` для работы со списками:
"Представьте, что вы проверяете товары в корзине, чтобы убедиться, что ничего не забыли."

**Дополнительное объяснение:**
- **`for friend in friends:`** — Эта строка означает, что для каждого элемента в списке `friends` будет выполняться код внутри цикла.
- **`in`** — Оператор, который проверяет наличие элемента в последовательности.
- **`friend`** и **`friends`** — Это переменные. `friends` — это список, который мы определили ранее, а `friend` — это временная переменная для каждого элемента списка во время каждой итерации цикла.

```python
# Пример цикла for по списку друзей
friends = ['Alice', 'Bob', 'Charlie']

for friend in friends:
    # Для каждого друга из списка friends выводим сообщение
    print(f"{friend}, are you coming to the party?")
```

**Разбор кода:**
1. **`friends = ['Alice', 'Bob', 'Charlie']`** — Создаём список `friends`, содержащий имена друзей.
2. **`for friend in friends:`** — Цикл `for` проходит по каждому элементу списка `friends`.
3. **`print(f"{friend}, are you coming to the party?")`** — Выводим сообщение для каждого друга.

**Вывод программы:**
```
Alice, are you coming to the party?
Bob, are you coming to the party?
Charlie, are you coming to the party?
```

---

### Функции в Python

**Объяснение через пример:**
"Представьте, что вам нужно дать инструкции помощнику, чтобы он складывал товары в корзину. Функция в программировании — это инструкция."

```python
# Функция для добавления товара в список покупок
def add_item(shopping_list, item):
    shopping_list.append(item)  # Добавляем элемент в список с помощью append

# Создаём список покупок
shopping_list = ['bread', 'milk']
add_item(shopping_list, 'cheese')  # Вызываем функцию для добавления 'cheese'
print(shopping_list)  # Вывод: ['bread', 'milk', 'cheese']
```

---

### Задания для учеников:

1. **Задача на списки:**
   - **Описание:** Создайте список любимых фильмов. Напишите программу, которая добавит новый фильм, удалит один фильм по выбору пользователя и выведет весь список.

```python
# Создаём список любимых фильмов
favorite_movies = ['The Matrix', 'Inception', 'Titanic']

# Добавляем новый фильм в список
new_movie = input("Which movie would you like to add? ")
favorite_movies.append(new_movie)

# Удаляем фильм из списка
movie_to_remove = input("Which movie would you like to remove? ")
if movie_to_remove in favorite_movies:
    favorite_movies.remove(movie_to_remove)
else:
    print(f"{movie_to_remove} is not in the list.")

# Выводим обновлённый список фильмов
print("Your favorite movies:", favorite_movies)
```

2. **Задача на цикл `for`:**
   - **Описание:** Создайте список студентов в классе. Напишите программу, которая выведет их имена, а затем скажет, сколько всего студентов.

```python
# Создаём список студентов
students = ['Alex', 'Maria', 'Dmitry']

# Проходим по списку студентов и выводим их имена
for student in students:
    print(f"Student: {student}")

# Выводим общее количество студентов
print(f"Total number of students: {len(students)}")
```

---

### Заключение:
- Подведите итог урока: обсудите, как списки и циклы помогают решать задачи.
- Домашнее задание:
  1. Написать программу, которая принимает список чисел и выводит только чётные числа.
  2. Создать функцию, которая принимает список чисел и возвращает их сумму.

---

### Пример объяснения с жизненной ситуацией:

**Пример 1: Проверка присутствия друзей на вечеринке**

"Представьте, что вы хотите узнать, пришли ли все друзья на вечеринку. Вы проверяете каждого друга по очереди — это как цикл `for`, который проходит по списку."

```python
# Список друзей
friends = ['Anna', 'Vlad', 'Kate']

# Проверяем, все ли друзья пришли на вечеринку
for friend in friends:
    print(f"{friend}, are you here?")
```

**Вывод программы:**
```
Anna, are you here?
Vlad, are you here?
Kate, are you here?
```

---
